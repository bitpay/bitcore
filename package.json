{
  "version": "8.25.8",
  "workspaces": [
    "packages/*"
  ],
  "prettier": {
    "singleQuote": true,
    "printWidth": 120
  },
  "scripts": {
    "build": "docker build -t bitcore-node . ",
    "watch": "npm run watch --workspaces --parallel",
    "postinstall": "npm run compile",
    "compile": "npm run compile --workspaces",
    "lint": "npm run lint --workspaces",
    "fix": "npm run fix --workspaces",
    "precommit": "npm run precommit --workspaces --if-present",
    "insight:build": "cd ./packages/insight && npm i && npm run build",
    "node": "cd packages/bitcore-node && npm start",
    "bws": "cd packages/bitcore-wallet-service && npm start",
    "test:ci:local": "npm run test:ci:build:local && npm run test:ci:all",
    "test:ci:build:local": "./ci.sh build local",
    "test:ci": "echo 'This command has been removed. Try running `npm run test:ci:local` to run tests locally using the test_runner docker container as before. The CI pipeline logic is now in .circleci/config.yml.'",
    "test:ci:build": "./ci.sh build ci",
    "test:ci:all": "./ci.sh 'npm run test:ci:all:workspaces'",
    "test:ci:unit": "./ci.sh 'npm run test:ci:unit:workspaces'",
    "test:ci:integration": "./ci.sh 'npm run test:ci:integration:workspaces'",
    "test:ci:coverage": "./ci.sh 'npm run test:ci:coverage:workspaces'",
    "test:bitcore-wallet-service": "cd ./packages/bitcore-wallet-service && npm run test",
    "ci:bitcore-wallet-service": "./ci.sh 'npm run test:bitcore-wallet-service'",
    "test:bitcore-wallet-client": "cd ./packages/bitcore-wallet-client && npm run test",
    "ci:bitcore-wallet-client": "./ci.sh 'npm run test:bitcore-wallet-client'",
    "test:bitcore-wallet": "cd ./packages/bitcore-wallet && npm run test",
    "ci:bitcore-wallet": "./ci.sh 'npm run test:bitcore-wallet'",
    "test:crypto-wallet-core": "cd ./packages/crypto-wallet-core && npm run test",
    "ci:crypto-wallet-core": "./ci.sh 'npm run test:crypto-wallet-core'",
    "test:bitcore-node": "cd ./packages/bitcore-node && npm run test",
    "test:bitcore-node:coverage": "cd ./packages/bitcore-node && npm run coverage",
    "test:bitcore-node:int": "cd ./packages/bitcore-node && npm run test:integration",
    "ci:bitcore-node": "./ci.sh 'npm run test:bitcore-node'",
    "ci:bitcore-node:int": "./ci.sh 'npm run test:bitcore-node:int'",
    "ci:bitcore-node:coverage": "./ci.sh 'npm run test:bitcore-node:coverage'",
    "test:bitcore-lib": "cd ./packages/bitcore-lib && npm run test",
    "ci:bitcore-lib": "./ci.sh 'npm run test:bitcore-lib'",
    "test:bitcore-lib-cash": "cd ./packages/bitcore-lib-cash && npm run test",
    "ci:bitcore-lib-cash": "./ci.sh 'npm run test:bitcore-lib-cash'",
    "test:bitcore-lib-ltc": "cd ./packages/bitcore-lib-ltc && npm run test",
    "ci:bitcore-lib-ltc": "./ci.sh 'npm run test:bitcore-lib-ltc'",
    "test:bitcore-lib-doge": "cd ./packages/bitcore-lib-doge && npm run test",
    "ci:bitcore-lib-doge": "./ci.sh 'npm run test:bitcore-lib-doge'",
    "test:bitcore-p2p": "cd ./packages/bitcore-p2p && npm run test",
    "ci:bitcore-p2p": "./ci.sh 'npm run test:bitcore-p2p'",
    "test:bitcore-p2p-cash": "cd ./packages/bitcore-p2p-cash && npm run test",
    "ci:bitcore-p2p-cash": "./ci.sh 'npm run test:bitcore-p2p-cash'",
    "test:bitcore-p2p-doge": "cd ./packages/bitcore-p2p-doge && npm run test",
    "ci:bitcore-p2p-doge": "./ci.sh 'npm run test:bitcore-p2p-doge'",
    "test:bitcore-mnemonic": "cd ./packages/bitcore-mnemonic && npm run test",
    "ci:bitcore-mnemonic": "./ci.sh 'npm run test:bitcore-mnemonic'",
    "test:bitcore-client": "cd ./packages/bitcore-client && npm run test",
    "ci:bitcore-client": "./ci.sh 'npm run test:bitcore-client'",
    "test:bitcore-tss": "cd ./packages/bitcore-tss && npm run test",
    "ci:bitcore-tss": "./ci.sh 'npm run test:bitcore-tss'",
    "test:ci:all:workspaces": "npm run test:ci --workspaces --if-present",
    "test:ci:unit:workspaces": "npm run test:ci:unit --workspaces --if-present",
    "test:ci:integration:workspaces": "npm run test:ci:integration --workspaces --if-present",
    "test:ci:coverage:workspaces": "npm run coverage --workspaces --if-present"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-customizable"
    }
  },
  "devDependencies": {
    "cz-customizable": "^5.2.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-plugin-import": "^2.8.0",
    "husky": "^2.4.0",
    "lint-staged": "^9.5.0",
    "prettier": "^1.19.1",
    "tslint": "^5.20.1",
    "tslint-config-prettier": "^1.18.0",
    "typedoc": "^0.15.0",
    "typescript-eslint-parser": "^15.0.0"
  },
  "dependencies": {
    "typescript": "4.9.4"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run precommit"
    }
  }
}
