apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    generation: 2
    labels:
      app: bitcore-node-api
    name: bitcore-node-api
  spec:
    progressDeadlineSeconds: 600
    replicas: 4
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: bitcore-node-api
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: bitcore-node-api
      spec:
        containers:
        - env:
          - name: DB_HOST
            value: mongo
          image: bitcore-node-api
          imagePullPolicy: Never
          name: bitcore-node-api
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 4
    conditions:
    - lastTransitionTime: "2020-02-03T01:22:47Z"
      lastUpdateTime: "2020-02-03T01:22:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-02-03T01:22:44Z"
      lastUpdateTime: "2020-02-03T01:22:47Z"
      message: ReplicaSet "bitcore-node-api-84b889b7b5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 4
    replicas: 4
    updatedReplicas: 4
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: bitcore-node-api
    name: api
    namespace: default
    resourceVersion: "1"
  spec:
    clusterIP: 10.103.141.79
    externalTrafficPolicy: Cluster
    ports:
    - nodePort: 32164
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: bitcore-node-api
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
  spec:
    clusterIP: 10.96.0.1
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: mongo
    namespace: default
    resourceVersion: "1"
  spec:
    clusterIP: 10.109.47.104
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Endpoints
  metadata:
    labels:
      app: bitcore-node-api
    name: api
    namespace: default
  subsets:
  - addresses:
    - ip: 172.17.0.2
      nodeName: minikube
      targetRef:
        kind: Pod
        name: bitcore-node-api-84b889b7b5-bwzj5
        namespace: default
    - ip: 172.17.0.5
      nodeName: minikube
      targetRef:
        kind: Pod
        name: bitcore-node-api-84b889b7b5-rkcqw
        namespace: default
    - ip: 172.17.0.8
      nodeName: minikube
      targetRef:
        kind: Pod
        name: bitcore-node-api-84b889b7b5-z42xk
        namespace: default
    - ip: 172.17.0.9
      nodeName: minikube
      targetRef:
        kind: Pod
        name: bitcore-node-api-84b889b7b5-ff5ds
        namespace: default
    ports:
    - port: 3000
      protocol: TCP
- apiVersion: v1
  kind: Endpoints
  metadata:
    name: kubernetes
    namespace: default
  subsets:
  - addresses:
    - ip: 192.168.99.100
    ports:
    - name: https
      port: 8443
      protocol: TCP
- apiVersion: v1
  kind: Endpoints
  metadata:
    name: mongo
    namespace: default
  subsets:
  - addresses:
    - ip: 10.0.2.2
    ports:
    - port: 27017
      protocol: TCP
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
